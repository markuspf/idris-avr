module IRTS.CodegenAVR(codegenAVR) where

import IRTS.CodegenCommon
import IRTS.Lang
import IRTS.Simplified

import Idris.Core.TT

import Data.Maybe
import Data.Char

codegenAVR :: CodeGenerator
codegenAVR ci = do
    writeFile (outputFile ci) (
         "/**************************************************\n"
      ++ " *\n"
      ++ " * This file was generated by idris-avr\n"
      ++ " *\n"
      ++ " **************************************************/\n"
      ++ header
      ++ code
      ++ startup)
      where code = concatMap doCodegen (simpleDecls ci)
 

header :: String
header = ""

startup :: String
startup = "call start"


avrName :: Name -> String
avrName n = "_" ++ concatMap avrchar (showCG n)
  where avrchar x | isAlpha x || isDigit x = [x]
                  | otherwise = "_" ++ show (fromEnum x) ++ "_"

doCodegen :: (Name, SDecl) -> String
doCodegen _ = ""
